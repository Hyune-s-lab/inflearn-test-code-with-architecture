package com.example.inflearntestcodewitharchitecture.mock

import com.example.inflearntestcodewitharchitecture.post.domain.Post
import com.example.inflearntestcodewitharchitecture.post.service.port.PostRepository
import java.util.*
import java.util.concurrent.atomic.AtomicLong

class FakePostRepository(
    private val autoGeneratedId: AtomicLong = AtomicLong(0),
    private val data: MutableList<Post> = Collections.synchronizedList(ArrayList()),
): PostRepository {
    override fun findById(id: Long): Post? {
        return data.stream().filter { item -> item.id!! == id }.findAny().orElse(null)
    }

    override fun save(post: Post): Post {
        return if (post.id == null || post.id == 0L) {
            val newPost = post.copy(id = autoGeneratedId.incrementAndGet())
            data.add(newPost)
            newPost
        } else {
            data.removeIf { item -> item.id == post.id }
            data.add(post)
            post
        }
    }
}
